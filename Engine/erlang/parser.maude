--- **************************************************************************************
--- * Selene: Model-checking in concurrent programing using message passing.
--- * Copyright (C) 2016  Adrián Riesco Rodríguez, Gorka Suárez García
--- *
--- * This program is free software: you can redistribute it and/or modify
--- * it under the terms of the GNU General Public License as published by
--- * the Free Software Foundation, either version 3 of the License, or
--- * (at your option) any later version.
--- *
--- * This program is distributed in the hope that it will be useful,
--- * but WITHOUT ANY WARRANTY; without even the implied warranty of
--- * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
--- * GNU General Public License for more details.
--- *
--- * You should have received a copy of the GNU General Public License
--- * along with this program.  If not, see <http://www.gnu.org/licenses/>.
--- **************************************************************************************

---TODO: Complete this file...

---(%
\section{Parser}
%)

*** |====================================================================================|
*** | Parser                                                                             |
*** |====================================================================================|

---(%
\subsection{fmod PARSER}
    This functional module represents a parser to create a syntactic tree to make
    a program to be executed in a machine.
%)
(fmod PARSER is
    *** |------------------------------------------------------------------------------|
    *** | Imports                                                                      |
    *** |------------------------------------------------------------------------------|

    pr EXPRESSION .
    pr MACHINE .

    *** |------------------------------------------------------------------------------|
    *** | Functions                                                                    |
    *** |------------------------------------------------------------------------------|

    eq parse (IF:InputFiles) = nil .

    ceq isVariable (SYM:Qid) =
        ("A" <= CHR:String) and (CHR:String <= "Z")
        if STR:String := string(SYM:Qid)
        /\ CHR:String := substr(STR:String, 0, 1) .

endfm)
